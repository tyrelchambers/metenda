datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  tasks    Task[]
  Category Category[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Task {
  id                  String    @id @default(cuid())
  title               String
  done                Boolean?  @default(false)
  notes               String
  fromDate            DateTime  @default(now())
  toDate              DateTime?
  incomplete          Boolean?  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String

  categories CategoriesOnTasks[]
}

model Category {
  id    String @id @default(cuid())
  title String
  color String @default("#ffffff")
  textColor String @default("#000000")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId            String
 
  taskId            String?
  tasks CategoriesOnTasks[]
}

model CategoriesOnTasks {
  task       Task     @relation(fields: [taskId], references: [id])
  taskId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@id([taskId, categoryId])
}
